<project name="WilmaScope" default="all" basedir=".">

	<!-- set global properties for this build -->
	<property name="src" value="src" />
	<property name="doc" value="doc" />
	<property name="lib" value="lib" />
	<property name="AreaChart3D" value="../AreaChart3D/bin" />
	<property name="dest" value="classes" />
	<property name="optimization" value="on" />
	<property name="cvsroot" value="tgdwyer@cvs.wilma.sourceforge.net:/cvsroot/wilma" />
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${dest}" />
		<mkdir dir="${doc}" />
	</target>

	<target name="compile" depends="init" description="Compile just the core wilma code">
		<!-- Compile the java code from ${src} into ${classes} -->
		<javac source="1.5" target="1.5" srcdir="${src}" destdir="${dest}" optimize="${optimization}" excludes="org/wilmascope/chat/**,org/wilmascope/TestChatClient.java,org/wilmascope/control/TalkingGraph.java,org/wilmascope/control/WilmaChatServCORBA.java">
			<classpath>
				<pathelement location="${lib}/Jama-1.0.1.jar" />
				<pathelement location="${lib}/j3d-vrml97.jar" />
				<pathelement location="${AreaChart3D}" />
			</classpath>
		</javac>
	</target>

	<target name="dist" depends="compile">
		<copy file="${lib}/WILMA_CONSTANTS.properties" todir="tmp_${DSTAMP}"/>
		<mkdir dir="tmp_${DSTAMP}"/>
		<mkdir dir="tmp_${DSTAMP}/org"/>
		<copy todir="tmp_${DSTAMP}/org">
			<fileset dir="${lib}/org"/>
		</copy>
		<copy todir="tmp_${DSTAMP}">
			<fileset dir="${dest}"/>
		</copy>
		<jar manifest="META-INF/MANIFEST.MF" jarfile="${lib}/wilma.jar" basedir="tmp_${DSTAMP}"/>
		<delete dir="tmp_${DSTAMP}"/>
	</target>
	<target name="distpackage" depends="dist">
		<mkdir dir="${dist}_${DSTAMP}" />
		<mkdir dir="${dist}_${DSTAMP}/bin" />
		<copy file="README.txt" todir="${dist}_${DSTAMP}" />
		<copy file="COPYING.txt" todir="${dist}_${DSTAMP}" />
		<copy todir="${dist}_${DSTAMP}/${lib}">
			<fileset dir="${lib}" />
		</copy>
		<copy todir="${dist}_${DSTAMP}/userdoc">
			<fileset dir="userdoc" excludes="book/**" />
		</copy>
		<copy todir="${dist}_${DSTAMP}/data">
			<fileset dir="data" />
		</copy>
		<copy todir="${dist}_${DSTAMP}/bin">
			<fileset dir="bin" />
		</copy>
		<copy todir="${dist}_${DSTAMP}/classes">
			<fileset dir="classes" />
		</copy>
		<mkdir dir="Wilma" />
		<copy todir="Wilma">
			<fileset dir="${dist}_${DSTAMP}" />
		</copy>
		<zip zipfile="Wilma_${DSTAMP}.zip">
			<zipfileset dir="Wilma" prefix="Wilma" />
		</zip>
		<tar tarfile="Wilma_${DSTAMP}.tar">
			<tarfileset dir="." includes="Wilma/bin/**" mode="755" />
			<tarfileset dir="." includes="Wilma/**" excludes="Wilma/bin/**" />
		</tar>
		<gzip src="Wilma_${DSTAMP}.tar" zipfile="Wilma_${DSTAMP}.tar.gz" />
		<delete file="Wilma_${DSTAMP}.tar" />
		<delete dir="Wilma" />
		<delete dir="${dist}_${DSTAMP}" />
	</target>

	<target name="all" depends="clean, compile, dist, doc, distpackage">
	</target>

	<target name="build" depends="compile">
	</target>

	<target name="run" depends="compile" description="run interactive Wilma session">
		<java classname="org.wilmascope.control.WilmaMain" dir="${lib}" fork="yes">
			<classpath>
				<pathelement location="${dest}" />
			</classpath>
		</java>
	</target>
	<target name="rundist" depends="dist" description="run interactive Wilma session from jar">
		<java classname="org.wilmascope.control.WilmaMain" fork="yes">
			<classpath>
				<pathelement location="wilma.jar" />
			</classpath>
		</java>
	</target>

	<target name="doc" description="generate javadoc documentation">
		<mkdir dir="${doc}" />
		<javadoc sourcepath="${src}" packagenames="org.wilmascope.graph,org.wilmascope.control,org.wilmascope.view,org.wilmascope.patterns,org.wilmascope.gui,org.wilmascope.global,org.wilmascope.forcelayout,org.wilmascope.file,org.wilmascope.dotlayout,org.wilmascope" destdir="${doc}" />
	</target>
	<target name="none">
	</target>
	<target name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${dest}" />
		<delete dir="${dist}" />
		<delete dir="${src}/org/wilmascope/chat" />
		<delete file="${lib}/wilma.jar" />
	</target>
	<target name="update" depends="clean" description="check source out of cvs">
		<cvs command="update" cvsroot="${cvsroot}" />
	</target>
</project>

